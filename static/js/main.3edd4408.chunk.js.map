{"version":3,"sources":["actions/dow.js","actions/coords.js","actions/zip.js","actions/date.js","components/MapContainer.js","components/App.js","actions/initialState.js","actions/meetup.js","reducers/index.js","reducers/dow.js","reducers/date.js","reducers/zip.js","reducers/coords.js","reducers/meetup.js","api/dow.js","sagas/dow.js","api/coords.js","sagas/coords.js","api/zip.js","sagas/zip.js","sagas/index.js","index.js"],"names":["Types","GET_DOW_REQUEST","GET_DOW_SUCCESS","getDOWRequest","date","type","GET_COORDS_REQUEST","GET_COORDS_SUCCESS","getCoordsRequest","zip","CHANGE_ZIP","GET_ZIP_REQUEST","GET_ZIP_SUCCESS","changeZIP","payload","getZIPRequest","coords","CHANGE_DATE","changeDate","MapContainer","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getGeohash","console","log","props","lat","String","parseInt","lng","stringToHash","data","hashResult","md5","pt1","slice","pt2","meetupCoordinates","meetupCoords","inherits","createClass","key","value","react_default","a","createElement","dist","google","center","yesIWantToUseGoogleMapApiInternals","zoom","title","position","Component","GoogleApiWrapper","apiKey","App","getDOWOpening","handleDateInput","e","target","doToday","moment","format","handleZIPInput","ZIPtoCoordinates","coordstoZIP","getBrowserCoordinates","_callee","regenerator_default","wrap","_context","prev","next","navigator","geolocation","getCurrentPosition","showBrowserCoordinates","stop","_callee2","browserCoords","_context2","latitude","sent","longitude","getMeetupCoordinates","_callee3","_context3","renderMapContainer","reactstrap_es","components_MapContainer","className","sm","md","lg","onChange","max","defaultValue","color","onClick","maxLength","React","connect","state","dowReducer","dateReducer","ZIPReducer","coordsReducer","dispatch","bindActionCreators","INITIAL_STATE","CHANGE_MEETUP","combineReducers","undefined","action","meetupReducer","meetup","getDOW","_x","_getDOW","endDate","today","daysBetween","options","result","DJIAdata","searchDate","dowOpening","diff","method","url","params","symbol","interval","outputsize","headers","x-rapidapi-key","x-rapidapi-host","axios","request","values","day","subtract","_","find","datetime","abrupt","open","watchGetDOWRequest","api","put","t0","_marked","takeLatest","actions","_marked2","DOWSagas","fork","getCoords","_getCoords","address","language","results","geometry","location","watchGetCoordsRequest","coords_marked","coords_marked2","coordsSagas","getZIP","_getZIP","address_components","long_name","watchGetZIPRequest","zip_marked","zip_marked2","ZIPSagas","rootSaga","all","toConsumableArray","sagas_marked","sagaMiddleware","createSagaMiddleware","defaults","baseURL","store","createStore","reducers","applyMiddleware","run","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.3edd4408.chunk.js","sourcesContent":["export const Types = {\n\tGET_DOW_REQUEST: 'GET_DOW_REQUEST',\n\tGET_DOW_SUCCESS: 'GET_DOW_SUCCESS'\n};\n\nexport const getDOWRequest = (date) => ({\n\ttype: Types.GET_DOW_REQUEST,\n\tdate\n});\n\nexport const getDOWSuccess = ({items}) => ({\n\ttype: Types.GET_DOW_SUCCESS,\n\tpayload: {\n\t\titems\n\t}\n});\n","export const Types = {\n\tGET_COORDS_REQUEST: 'GET_COORDS_REQUEST',\n\tGET_COORDS_SUCCESS: 'GET_COORDS_SUCCESS'\n};\n\nexport const getCoordsRequest = (zip) => ({\n\ttype: Types.GET_COORDS_REQUEST,\n\tzip\n});\n\nexport const getCoordsSuccess = ({coords}) => ({\n\ttype: Types.GET_COORDS_SUCCESS,\n\tpayload: {\n\t\tcoords\n\t}\n});\n","export const Types = {\n\tCHANGE_ZIP: 'CHANGE_ZIP',\n\tGET_ZIP_REQUEST: 'GET_ZIP_REQUEST',\n\tGET_ZIP_SUCCESS: 'GET_ZIP_SUCCESS',\n};\n\nexport const changeZIP = (zip) => {\n  return {\n    type: Types.CHANGE_ZIP,\n\t\tpayload: zip\n  }\n}\n\nexport const getZIPRequest = (coords) => ({\n\ttype: Types.GET_ZIP_REQUEST,\n\tcoords\n});\n\nexport const getZIPSuccess = (coords) => ({\n\ttype: Types.GET_ZIP_SUCCESS,\n\tpayload:\n\t\tcoords\n});\n","export const Types = {\n\tCHANGE_DATE: 'CHANGE_DATE'\n};\n\nexport const changeDate = (date) => {\n  return {\n    type: Types.CHANGE_DATE,\n\t\tpayload:date\n  }\n}\n\nexport default changeDate;\n","import {Map, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport React, { Component} from 'react';\nimport md5 from 'md5'\n\nexport class MapContainer extends Component {\n\n\n  componentDidMount(){\n    this.meetupCoords = this.props.coords;\n  }\n  getGeohash = () =>{\n    // the math behind finding the geohashing coordinates\n    console.log(this.props)\n    let lat = String(parseInt(this.props.coords.lat));\n    let lng = String(parseInt(this.props.coords.lng));\n    let stringToHash = String(this.props.date) + '-' + String(this.props.data) ;\n    let hashResult = md5(stringToHash)\n    let pt1 = hashResult.slice(0,hashResult.length/2)\n    let pt2 = hashResult.slice(hashResult.length/2)\n    let todec1 = parseInt(pt1,16)\n    let todec2 = parseInt(pt2,16)\n    const meetupCoordinates = {\n      lat: lat+'.'+todec1,\n      lng: lng+'.'+todec2\n    }\n    // console.log(meetupCoordinates)\n    this.meetupCoords = meetupCoordinates;\n  }\n  componentDidUpdate(){\n    this.getGeohash()\n  }\nrender() {\n  console.log(this.props)\n  return (\n    <div>\n      <Map\n        google={this.props.google}\n        center={this.meetupCoords}\n        yesIWantToUseGoogleMapApiInternals\n        zoom={15}>\n        <Marker\n         title={'This is your meetup location.'}\n         position={this.meetupCoords} />\n      </Map>\n    </div>\n );\n }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyAquoUs4NfM4dxHs2V2Ja8jxmeYy1Dw9so'\n})(MapContainer)\n","import React from 'react'\nimport {Form, Button, Input, Card, CardTitle, CardSubtitle, CardBody, Row, Col} from 'reactstrap';\nimport {connect} from 'react-redux';\nimport {getDOWRequest} from '../actions/dow'\nimport {getCoordsRequest} from '../actions/coords'\nimport {getZIPRequest} from '../actions/zip'\nimport {changeDate} from '../actions/date'\nimport {changeZIP} from '../actions/zip'\nimport {bindActionCreators} from 'redux'\nimport moment from 'moment'\nimport MapContainer from './MapContainer'\n\nclass App extends React.Component {\n\n  getDOWOpening = () => {\n    this.props.getDOWRequest(this.props.date);\n  }\n  handleDateInput = (e) =>{\n    this.props.changeDate(e.target.value);\n  }\n  doToday = () =>  {\n    this.props.changeDate(moment().format('YYYY-MM-DD'));\n  }\n  handleZIPInput = (e) => {\n    // console.log(e.target.value)\n    this.props.changeZIP(e.target.value);\n  }\n  ZIPtoCoordinates = (e) =>{\n    // console.log('ZIPtoCoordinates')\n    // console.log(this.props.zip)\n    this.props.getCoordsRequest(this.props.zip)\n  }\n  coordstoZIP = (coords) =>{\n    // console.log('coordstoZip')\n    // console.log(coords)\n    this.props.getZIPRequest(coords)\n  }\n  getBrowserCoordinates = async () =>{\n    // console.log('getting browser coordinates')\n    await navigator.geolocation.getCurrentPosition(this.showBrowserCoordinates);\n  }\n  showBrowserCoordinates = async (position) =>{\n    let lat = await position.coords.latitude\n    let lng = await position.coords.longitude\n    let browserCoords = {lat: lat, lng:lng}\n    this.coordstoZIP(browserCoords)\n  }\n  renderMapContainer(){\n    return(\n      <Row>\n          <MapContainer coords={this.props.coords} data = {this.props.data} date = {this.props.date}></MapContainer>\n      </Row>\n    )\n  }\n  getMeetupCoordinates = async () =>{\n    await this.getDOWOpening();\n    await this.ZIPtoCoordinates();\n    await this.renderMapContainer();\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <div>\n          <Row>\n            <Col sm=\"4\" md=\"4\" lg=\"4\">\n            </Col>\n            <Col sm=\"4\" md=\"4\" lg=\"4\">\n              <Card>\n                <CardTitle>XKCD Geohashing</CardTitle>\n                <CardSubtitle>inspired by xkcd.com/426</CardSubtitle>\n                <CardBody>\n                  <Form>\n                    <Input type=\"date\" onChange={this.handleDateInput} max={moment().format(\"YYYY-MM-DD\")} defaultValue = {''} value = {this.props.date}/>\n                    <Button color=\"primary\" onClick = {this.getDOWOpening}>Get DOW Opening</Button>\n                    <u color=\"secondary\" onClick = {this.doToday}> Or just use today's date.</u>\n                  </Form>\n                    <p> The most recent DOW opening for that day is {this.props.data} </p>\n                    <Form>\n                      <Input onChange={this.handleZIPInput} maxLength=\"9\" defaultValue = {''} value={this.props.zip} />\n                        <Button color=\"primary\" onClick = {this.ZIPtoCoordinates}>Get Coordinates</Button>\n                        <Button color=\"secondary\" onClick = {this.getBrowserCoordinates}>Get location from browser instead</Button>\n                    </Form>\n                  <Form>\n                    <Button color=\"primary\" onClick = {this.getMeetupCoordinates}>Get Meetup Coordinates</Button>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n            <Col sm=\"4\" md=\"4\" lg=\"4\">\n            </Col>\n          </Row>\n            {this.renderMapContainer()}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state){\n  return {\n    data: state.dowReducer.data,\n    date: state.dateReducer.date,\n    zip: state.ZIPReducer.zip,\n    coords: state.coordsReducer.coords,\n  }\n}\nfunction mapDispatchToProps(dispatch){\n  return bindActionCreators({\n    getDOWRequest: getDOWRequest,\n    changeDate: changeDate,\n    changeZIP: changeZIP,\n    getCoordsRequest: getCoordsRequest,\n    getZIPRequest: getZIPRequest\n  }, dispatch)\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(App)\n","import moment from 'moment'\nexport const INITIAL_STATE =  {\n    data: ['not yet retrieved'],\n\t\tdate: moment().format(\"YYYY-MM-DD\"),\n    zip: 10010,\n    coords: {\n      lat: 41.9404,\n      lng: -87.6532\n    }\n}\n","export const Types = {\n\tCHANGE_MEETUP: 'CHANGE_MEETUP'\n};\n\nexport const changeMeetup = (meetup) => {\n  return {\n    type: Types.CHANGE_MEETUP,\n\t\tpayload: meetup\n  }\n}\n\nexport default changeMeetup;\n","import {combineReducers} from 'redux';\nimport dowReducer from './dow';\nimport dateReducer from './date';\nimport coordsReducer from './coords'\nimport ZIPReducer from './zip';\nimport meetupReducer from './meetup'\nexport default combineReducers({\n\tdowReducer: dowReducer,\n\tdateReducer: dateReducer,\n\tZIPReducer: ZIPReducer,\n\tcoordsReducer: coordsReducer,\n\tmeetupReducer: meetupReducer,\n});\n","import {Types} from '../actions/dow';\nimport {INITIAL_STATE} from '../actions/initialState'\n\n\nexport default function dowReducer(state =  INITIAL_STATE, action){\n  switch (action.type){\n    case Types.GET_DOW_SUCCESS:{\n      // console.log('successful dowReducer call')\n      // console.log(action.payload)\n      return {\n        data:action.payload\n      }\n    }\n    default:\n      return state;\n  }\n}\n","import {Types} from '../actions/date';\nimport {INITIAL_STATE} from '../actions/initialState'\n\n\n\nexport default function dateReducer(state = INITIAL_STATE, action){\n  switch (action.type){\n    case Types.CHANGE_DATE:{\n      return {\n        date: action.payload\n      }\n    }\n    default:\n      return state;\n  }\n}\n","import {Types} from '../actions/zip';\nimport {INITIAL_STATE} from '../actions/initialState'\n\nexport default function ZIPReducer(state = INITIAL_STATE, action){\n  switch (action.type){\n    case Types.CHANGE_ZIP:{\n      return {\n        zip: action.payload\n      }\n    }\n    case Types.GET_ZIP_REQUEST:{\n      // console.log('successful ZIPReducer call')\n      // console.log(action)\n      return {\n        coords:action.payload\n      }\n    }\n    default:\n      return state;\n  }\n}\n","import {Types} from '../actions/coords';\nimport {INITIAL_STATE} from '../actions/initialState'\n\nexport default function coordsReducer(state =  INITIAL_STATE, action){\n  switch (action.type){\n    case Types.GET_COORDS_SUCCESS:{\n      console.log('successful coordsReducer call')\n      console.log(action.payload)\n      return {\n        coords:action.payload\n      }\n    }\n    default:\n      return state;\n  }\n}\n","import {Types} from '../actions/meetup';\nimport {INITIAL_STATE} from '../actions/initialState'\n\n\n\nexport default function meetupReducer(state = INITIAL_STATE, action){\n  switch (action.type){\n    case Types.CHANGE_MEETUP:{\n      return {\n        meetup: action.payload\n      }\n    }\n    default:\n      return state;\n  }\n}\n","import axios from 'axios';\nimport moment from 'moment';\nimport _ from 'lodash'\n\nexport async function getDOW(date){\n  // to adjust for different dates, the outputsize value needs to be adjusted accordingly.\n  // new code uses the twelvedata API server, which provides all the information I need\n  // plus I have rapidapi taking care of the overhead, which is nice\n  let endDate = moment(date);\n  let today = moment().format('YYYY-MM-DD')\n  let daysBetween = -1 * endDate.diff(today,\"days\") +1\n  let options = {\n  method: 'GET',\n  url: 'https://twelve-data1.p.rapidapi.com/time_series',\n  params: {symbol: 'DJI', interval: '1day', outputsize: daysBetween, format: 'json'},\n    headers: {\n      'x-rapidapi-key': 'cc072cf6a1mshca7a9fff5bd7131p175ba7jsne97460d453d2',\n      'x-rapidapi-host': 'twelve-data1.p.rapidapi.com'\n    }\n  };\n  let result = await axios.request(options)\n  let DJIAdata = result.data.values;\n  let searchDate = endDate;\n  //To handle weekend date inputs, since the markets aren't open on the weekend\n  if (endDate.day() === 6){ //if it's a saturday\n    searchDate = endDate.subtract(1, \"days\");\n  }else if (endDate.day() === 0) { //if it's a sunday\n    searchDate =endDate.subtract(2, \"days\");\n  }\n  let dowOpening = _.find(DJIAdata, {'datetime':moment(searchDate).format('YYYY-MM-DD')})\n  return dowOpening.open;\n};\n","import {takeLatest, call, put, fork} from 'redux-saga/effects';\nimport * as actions from '../actions/dow';\nimport * as api from '../api/dow';\nimport {Types} from '../actions/dow';\n\n\nfunction* getDOW(action){\n\ttry{\n\t\tconst result = yield call(api.getDOW, action.date);\n\t\t// console.log('successful saga execution')\n\t\tconsole.log(result)\n\t\tyield put({\n\t\t\ttype: Types.GET_DOW_SUCCESS,\n\t\t\tpayload: result\n\t\t})\n\t}catch(e){\n      console.log('error')\n\t}\n}\n\nfunction* watchGetDOWRequest(){\n\t// console.log('watching getdow saga call')\n\t//take the latest request action called and then call the getDow function\n\t//taking the latest because we want to adjust for when people update the date they put in\n\tyield takeLatest(actions.Types.GET_DOW_REQUEST, getDOW);\n}\n\nconst DOWSagas = [\n\tfork(watchGetDOWRequest),\n];\n\nexport default DOWSagas;\n","import axios from 'axios'\n\n\nexport async function getCoords(zip){\n    // let result = await axios.get(`https://www.zipcodeapi.com/rest/qqZmn6H64bx2BdF9UWZKivRu5vQVZtejqIQOVXCkPiRwwPVht3feiPEqxIMY3S5P/info.json/${zip}/degrees`)\n    console.log(zip)\n    let options = {\n      method: 'GET',\n      url: 'https://google-maps-geocoding.p.rapidapi.com/geocode/json',\n      params: {address: ''+zip, language: 'en'},\n      headers: {\n        'x-rapidapi-key': 'cc072cf6a1mshca7a9fff5bd7131p175ba7jsne97460d453d2',\n        'x-rapidapi-host': 'google-maps-geocoding.p.rapidapi.com'\n      }\n    };\n    let result = await axios.request(options);\n    console.log(result.data.results[0].geometry.location);\n    return result.data.results[0].geometry.location;\n};\n","import {takeLatest, call, put, fork} from 'redux-saga/effects';\nimport * as actions from '../actions/coords';\nimport * as api from '../api/coords';\nimport {Types} from '../actions/coords';\n\n\nfunction* getCoords(action){\n\ttry{\n\t\tconst result = yield call(api.getCoords, action.zip);\n\t\t// console.log('successful saga execution')\n\t\tyield put({\n\t\t\ttype: Types.GET_COORDS_SUCCESS,\n\t\t\tpayload: result\n\t\t})\n\t}catch(e){\n      console.log('error')\n\t}\n}\n\nfunction* watchGetCoordsRequest(){\n\t// console.log('watching getcoords saga call')\n\t//take the latest request action called and then call the getDow function\n\t//taking the latest because we want to adjust for when people update the date they put in\n\tyield takeLatest(actions.Types.GET_COORDS_REQUEST, getCoords);\n}\n\nconst coordsSagas = [\n\tfork(watchGetCoordsRequest),\n];\n\nexport default coordsSagas;\n","import axios from 'axios'\n\n\nexport async function getZIP(coords){\n    // let result = await axios.get(`https://www.coordscodeapi.com/rest/qqZmn6H64bx2BdF9UWZKivRu5vQVZtejqIQOVXCkPiRwwPVht3feiPEqxIMY3S5P/info.json/${coords}/degrees`)\n    // console.log('getZIP API fired')\n    let options = {\n      method: 'GET',\n      url: 'https://google-maps-geocoding.p.rapidapi.com/geocode/json',\n      params: {address: coords.lat+','+coords.lng, language: 'en'},\n      headers: {\n        'x-rapidapi-key': 'cc072cf6a1mshca7a9fff5bd7131p175ba7jsne97460d453d2',\n        'x-rapidapi-host': 'google-maps-geocoding.p.rapidapi.com'\n      }\n    };\n    let result = await axios.request(options);\n    return result.data.results[0].address_components[7].long_name;\n};\n","import {takeLatest, call, put, fork} from 'redux-saga/effects';\nimport * as actions from '../actions/zip';\nimport * as api from '../api/zip';\nimport {Types} from '../actions/zip';\n\n\nfunction* getZIP(action){\n\ttry{\n\t\t// console.log('getzip saga')\n\t\t// console.log(action)\n\t\tconst result = yield call(api.getZIP, action.coords);\n\t\t// console.log('successful saga execution')\n\t\t// console.log(result)\n\t\tyield put({\n\t\t\ttype: Types.CHANGE_ZIP,\n\t\t\tpayload: result\n\t\t})\n\t}catch(e){\n      console.log('error')\n\t}\n}\n\nfunction* watchGetZIPRequest(){\n\t// console.log('watching getzip saga call')\n\t//take the latest request action called and then call the getzip function\n\t//taking the latest because we want to adjust for when people update the date they put in\n\tyield takeLatest(actions.Types.GET_ZIP_REQUEST, getZIP);\n}\n\nconst ZIPSagas = [\n\tfork(watchGetZIPRequest),\n];\n\nexport default ZIPSagas;\n","import DOWSagas from './dow';\nimport coordsSagas from './coords'\nimport ZIPSagas from './zip'\nimport {all} from 'redux-saga/effects';\n\nexport default function* rootSaga(){\n\tyield all([\n\t\t...DOWSagas,\n\t\t...coordsSagas,\n\t\t...ZIPSagas,\n\t]);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './components/App';\nimport reducers from './reducers';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport axios from 'axios';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './sagas';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst sagaMiddleware = createSagaMiddleware();\n// axios.defaults.baseURL = 'https://www.quandl.com/api/v3/datasets';\n// axios.defaults.baseURL = 'https://www.alphavantage.co/'\naxios.defaults.baseURL = 'http://api.marketstack.com/v1'\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root')\n);\n"],"sourceRoot":""}