{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Neil/Projects/geohashing2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getDOW),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchGetDOWRequest);\n\nimport { takeEvery, call, fork } from 'redux-saga/effects';\nimport * as actions from '../actions/dow';\nimport * as api from '../api/dow';\n\nfunction getDOW() {\n  var result;\n  return _regeneratorRuntime.wrap(function getDOW$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          console.log('getDOW saga activated');\n          _context.next = 4;\n          return call(api.getDOW);\n\n        case 4:\n          result = _context.sent;\n          return _context.abrupt(\"return\", result);\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('error');\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 8]]);\n}\n\nfunction watchGetDOWRequest() {\n  return _regeneratorRuntime.wrap(function watchGetDOWRequest$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log('watchGetDOWRequest saga activated');\n          _context2.next = 3;\n          return takeEvery(actions.Types.GET_DOW_REQUEST, getDOW);\n\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}\n\nvar DOWSagas = [fork(watchGetDOWRequest)];\nexport default DOWSagas;","map":{"version":3,"sources":["/Users/Neil/Projects/geohashing2/src/sagas/dow.js"],"names":["getDOW","watchGetDOWRequest","takeEvery","call","fork","actions","api","console","log","result","Types","GET_DOW_REQUEST","DOWSagas"],"mappings":";;;;yBAIUA,M;;;yBAaAC,kB;;AAjBV,SAAQC,SAAR,EAAmBC,IAAnB,EAAyBC,IAAzB,QAAoC,oBAApC;AACA,OAAO,KAAKC,OAAZ,MAAyB,gBAAzB;AACA,OAAO,KAAKC,GAAZ,MAAqB,YAArB;;AAEA,SAAUN,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEEO,UAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AAFF;AAGiB,iBAAML,IAAI,CAACG,GAAG,CAACN,MAAL,CAAV;;AAHjB;AAGQS,UAAAA,MAHR;AAAA,2CAOSA,MAPT;;AAAA;AAAA;AAAA;AASMF,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAAUP,kBAAV;AAAA;AAAA;AAAA;AAAA;AACCM,UAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AADD;AAEC,iBAAMN,SAAS,CAACG,OAAO,CAACK,KAAR,CAAcC,eAAf,EAAgCX,MAAhC,CAAf;;AAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,IAAMY,QAAQ,GAAG,CAChBR,IAAI,CAACH,kBAAD,CADY,CAAjB;AAIA,eAAeW,QAAf","sourcesContent":["import {takeEvery, call, fork} from 'redux-saga/effects';\nimport * as actions from '../actions/dow';\nimport * as api from '../api/dow';\n\nfunction* getDOW(){\n\ttry{\n\t\tconsole.log('getDOW saga activated')\n\t\tconst result = yield call(api.getDOW);\n\t\t// yield put(actions.getDOWSuccess({\n\t\t//\n\t\t// }));\n\t\treturn result\n\t}catch(e){\n      console.log('error')\n\t}\n}\n\nfunction* watchGetDOWRequest(){\n\tconsole.log('watchGetDOWRequest saga activated')\n\tyield takeEvery(actions.Types.GET_DOW_REQUEST, getDOW);\n}\n\nconst DOWSagas = [\n\tfork(watchGetDOWRequest),\n];\n\nexport default DOWSagas;\n"]},"metadata":{},"sourceType":"module"}