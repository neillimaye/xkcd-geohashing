{"ast":null,"code":"// saga structure should align with the action structure\nimport { takeEvery, takeLatest, call, fork, put } from 'redux-saga/effects'; // call allow us to call a promise, some async function, and wait for it to resolve\n// fork allows the redux toolkit to fork processes into different processes\n\nimport * as actions from '../actions/users'; //going to import all of them as actions\n\nimport * as api from '../api/users';\n\nfunction* getUsers() {\n  try {\n    const result = yield call(api.getUsers);\n    yield put(actions.getUsersSuccess({\n      items: result.data.data\n    }));\n  } catch (e) {\n    console.log('An error occurred when trying to get the users');\n  }\n}\n\nexport function* watchGetUsersRequest() {\n  yield takeEvery(actions.Types.GET_USERS_REQUEST, getUsers);\n}\nexport const usersSagas = [fork(watchGetUsersRequest), fork(watchCreateUserRequest)]; // reducer function meets generator function\n\nfunction* createUser(action) {\n  try {\n    yield call(api.createUser, {\n      firstName: action.payload.firstName,\n      lastName: action.payload.lastName\n    });\n    yield call(getUsers);\n  } catch (e) {}\n}\n\nexport function* watchCreateUserRequest() {\n  yield takeLatest(actions.Types.CREATE_USER_REQUEST, createUser);\n}\nexport default usersSagas;","map":{"version":3,"sources":["/Users/Neil/Projects/geohashing2/src/sagas/users.js"],"names":["takeEvery","takeLatest","call","fork","put","actions","api","getUsers","result","getUsersSuccess","items","data","e","console","log","watchGetUsersRequest","Types","GET_USERS_REQUEST","usersSagas","watchCreateUserRequest","createUser","action","firstName","payload","lastName","CREATE_USER_REQUEST"],"mappings":"AAAA;AACA,SAAQA,SAAR,EAAmBC,UAAnB,EAA+BC,IAA/B,EAAqCC,IAArC,EAA2CC,GAA3C,QAAqD,oBAArD,C,CACA;AACA;;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB,C,CACA;;AACA,OAAO,KAAKC,GAAZ,MAAqB,cAArB;;AAGA,UAAUC,QAAV,GAAoB;AACnB,MAAG;AACF,UAAMC,MAAM,GAAG,MAAMN,IAAI,CAACI,GAAG,CAACC,QAAL,CAAzB;AACA,UAAMH,GAAG,CAACC,OAAO,CAACI,eAAR,CAAwB;AACjCC,MAAAA,KAAK,EAAEF,MAAM,CAACG,IAAP,CAAYA;AADc,KAAxB,CAAD,CAAT;AAGA,GALD,CAKC,OAAMC,CAAN,EAAQ;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ;AACJ;AACD;;AACD,OAAO,UAAUC,oBAAV,GAAgC;AACrC,QAAMf,SAAS,CAACK,OAAO,CAACW,KAAR,CAAcC,iBAAf,EAAkCV,QAAlC,CAAf;AACD;AAED,OAAO,MAAMW,UAAU,GAAG,CACxBf,IAAI,CAACY,oBAAD,CADoB,EAExBZ,IAAI,CAACgB,sBAAD,CAFoB,CAAnB,C,CAKP;;AACA,UAAUC,UAAV,CAAqBC,MAArB,EAA4B;AAC3B,MAAG;AACF,UAAMnB,IAAI,CAACI,GAAG,CAACc,UAAL,EAAiB;AAACE,MAAAA,SAAS,EAAED,MAAM,CAACE,OAAP,CAAeD,SAA3B;AAAsCE,MAAAA,QAAQ,EAAEH,MAAM,CAACE,OAAP,CAAeC;AAA/D,KAAjB,CAAV;AACA,UAAMtB,IAAI,CAACK,QAAD,CAAV;AACA,GAHD,CAGC,OAAMK,CAAN,EAAQ,CACR;AACD;;AAED,OAAO,UAAUO,sBAAV,GAAkC;AACvC,QAAMlB,UAAU,CAACI,OAAO,CAACW,KAAR,CAAcS,mBAAf,EAAoCL,UAApC,CAAhB;AACD;AAED,eAAeF,UAAf","sourcesContent":["// saga structure should align with the action structure\nimport {takeEvery, takeLatest, call, fork, put} from 'redux-saga/effects'\n// call allow us to call a promise, some async function, and wait for it to resolve\n// fork allows the redux toolkit to fork processes into different processes\nimport * as actions from '../actions/users'\n//going to import all of them as actions\nimport * as api from '../api/users'\n\n\nfunction* getUsers(){\n\ttry{\n\t\tconst result = yield call(api.getUsers);\n\t\tyield put(actions.getUsersSuccess({\n\t\t\titems: result.data.data\n\t\t}));\n\t}catch(e){\n      console.log('An error occurred when trying to get the users')\n\t}\n}\nexport function* watchGetUsersRequest(){\n  yield takeEvery(actions.Types.GET_USERS_REQUEST, getUsers);\n}\n\nexport const usersSagas = [\n  fork(watchGetUsersRequest),\n  fork(watchCreateUserRequest),\n]\n\n// reducer function meets generator function\nfunction* createUser(action){\n\ttry{\n\t\tyield call(api.createUser, {firstName: action.payload.firstName, lastName: action.payload.lastName})\n\t\tyield call(getUsers);\n\t}catch(e){\n\t}\n}\n\nexport function* watchCreateUserRequest(){\n  yield takeLatest(actions.Types.CREATE_USER_REQUEST, createUser)\n}\n\nexport default usersSagas;\n"]},"metadata":{},"sourceType":"module"}