{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Neil/Projects/xkcd-geohashing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Neil/Projects/xkcd-geohashing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nexport function getZIP(_x) {\n  return _getZIP.apply(this, arguments);\n}\n\nfunction _getZIP() {\n  _getZIP = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(coords) {\n    var options, result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // let result = await axios.get(`https://www.coordscodeapi.com/rest/qqZmn6H64bx2BdF9UWZKivRu5vQVZtejqIQOVXCkPiRwwPVht3feiPEqxIMY3S5P/info.json/${coords}/degrees`)\n            console.log(coords);\n            options = {\n              method: 'GET',\n              url: 'https://google-maps-geocoding.p.rapidapi.com/geocode/json',\n              params: {\n                address: coords.lat + ',' + coords.lng,\n                language: 'en'\n              },\n              headers: {\n                'x-rapidapi-key': 'cc072cf6a1mshca7a9fff5bd7131p175ba7jsne97460d453d2',\n                'x-rapidapi-host': 'google-maps-geocoding.p.rapidapi.com'\n              }\n            };\n            _context.next = 4;\n            return axios.request(options);\n\n          case 4:\n            result = _context.sent;\n            console.log(result.results[0].address_components[7].short_name);\n            return _context.abrupt(\"return\", 1);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _getZIP.apply(this, arguments);\n}\n\n;","map":{"version":3,"sources":["/Users/Neil/Projects/xkcd-geohashing/src/api/zip.js"],"names":["axios","getZIP","coords","console","log","options","method","url","params","address","lat","lng","language","headers","request","result","results","address_components","short_name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,gBAAsBC,MAAtB;AAAA;AAAA;;;;;2BAAO,iBAAsBC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACIG,YAAAA,OAHD,GAGW;AACZC,cAAAA,MAAM,EAAE,KADI;AAEZC,cAAAA,GAAG,EAAE,2DAFO;AAGZC,cAAAA,MAAM,EAAE;AAACC,gBAAAA,OAAO,EAAEP,MAAM,CAACQ,GAAP,GAAW,GAAX,GAAeR,MAAM,CAACS,GAAhC;AAAqCC,gBAAAA,QAAQ,EAAE;AAA/C,eAHI;AAIZC,cAAAA,OAAO,EAAE;AACP,kCAAkB,oDADX;AAEP,mCAAmB;AAFZ;AAJG,aAHX;AAAA;AAAA,mBAYgBb,KAAK,CAACc,OAAN,CAAcT,OAAd,CAZhB;;AAAA;AAYCU,YAAAA,MAZD;AAaHZ,YAAAA,OAAO,CAACC,GAAR,CAAYW,MAAM,CAACC,OAAP,CAAe,CAAf,EAAkBC,kBAAlB,CAAqC,CAArC,EAAwCC,UAApD;AAbG,6CAcI,CAdJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAeN","sourcesContent":["import axios from 'axios'\n\n\nexport async function getZIP(coords){\n    // let result = await axios.get(`https://www.coordscodeapi.com/rest/qqZmn6H64bx2BdF9UWZKivRu5vQVZtejqIQOVXCkPiRwwPVht3feiPEqxIMY3S5P/info.json/${coords}/degrees`)\n    console.log(coords)\n    let options = {\n      method: 'GET',\n      url: 'https://google-maps-geocoding.p.rapidapi.com/geocode/json',\n      params: {address: coords.lat+','+coords.lng, language: 'en'},\n      headers: {\n        'x-rapidapi-key': 'cc072cf6a1mshca7a9fff5bd7131p175ba7jsne97460d453d2',\n        'x-rapidapi-host': 'google-maps-geocoding.p.rapidapi.com'\n      }\n    };\n    let result = await axios.request(options);\n    console.log(result.results[0].address_components[7].short_name);\n    return 1;\n};\n"]},"metadata":{},"sourceType":"module"}