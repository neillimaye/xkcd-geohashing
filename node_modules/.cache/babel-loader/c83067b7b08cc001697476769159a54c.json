{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Neil/Projects/xkcd-geohashing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Neil/Projects/xkcd-geohashing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n//this code does a little more than an API call\n//quandl wouldn't let me look at any information past 2017, which is great\n//IF YOU'RE A STOCKBROKER WITH A FUCKING TIME MACHINE\nimport axios from 'axios';\nimport moment from 'moment'; // ${moment().subtract(2, \"days\")}\n// ${moment()}\n\nvar quandlAPIKey = 'Ywd3Gtx2oyyN_Ma3exrG';\nvar alphaVantageAPIKey = 'H96XWBT1J9Y9RN4R';\nexport function getDOW(_x) {\n  return _getDOW.apply(this, arguments);\n}\n\nfunction _getDOW() {\n  _getDOW = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(date) {\n    var end_date, start_date, DOWDataQuery, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // code below is to verify that I can manipulate the given date properly to put into the API qrequest\n            // console.log('api date')\n            // console.log((date.date))\n            // console.log(moment(date.date).subtract(2,\"days\").format('YYYY-MM-DD'))\n            end_date = date.date;\n            start_date = moment(date.date).subtract(2, \"days\").format('YYYY-MM-DD');\n            DOWDataQuery = \"query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=DOW&outputsize=full&apikey=\".concat(alphaVantageAPIKey);\n            _context.next = 5;\n            return axios.get(DOWDataQuery);\n\n          case 5:\n            data = _context.sent;\n            console.log('Successful API Call');\n            console.log(data.data['Time Series (Daily)'][end_date]);\n            return _context.abrupt(\"return\", data);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _getDOW.apply(this, arguments);\n}\n\n;","map":{"version":3,"sources":["/Users/Neil/Projects/xkcd-geohashing/src/api/dow.js"],"names":["axios","moment","quandlAPIKey","alphaVantageAPIKey","getDOW","date","end_date","start_date","subtract","format","DOWDataQuery","get","data","console","log"],"mappings":";;AAAA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;AACA;;AACA,IAAMC,YAAY,GAAG,sBAArB;AACA,IAAMC,kBAAkB,GAAG,kBAA3B;AAEA,gBAAsBC,MAAtB;AAAA;AAAA;;;;;2BAAO,iBAAsBC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AACL;AACA;AACA;AACA;AACIC,YAAAA,QALC,GAKUD,IAAI,CAACA,IALf;AAMDE,YAAAA,UANC,GAMaN,MAAM,CAACI,IAAI,CAACA,IAAN,CAAN,CAAkBG,QAAlB,CAA2B,CAA3B,EAA6B,MAA7B,EAAqCC,MAArC,CAA4C,YAA5C,CANb;AAODC,YAAAA,YAPC,yFAO8FP,kBAP9F;AAAA;AAAA,mBAQYH,KAAK,CAACW,GAAN,CAAUD,YAAV,CARZ;;AAAA;AAQDE,YAAAA,IARC;AASLC,YAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAD,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACA,IAAL,CAAU,qBAAV,EAAiCN,QAAjC,CAAZ;AAVK,6CAWEM,IAXF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAYN","sourcesContent":["//this code does a little more than an API call\n//quandl wouldn't let me look at any information past 2017, which is great\n//IF YOU'RE A STOCKBROKER WITH A FUCKING TIME MACHINE\n\nimport axios from 'axios';\nimport moment from 'moment'\n\n// ${moment().subtract(2, \"days\")}\n// ${moment()}\nconst quandlAPIKey = 'Ywd3Gtx2oyyN_Ma3exrG';\nconst alphaVantageAPIKey = 'H96XWBT1J9Y9RN4R';\n\nexport async function getDOW(date){\n  // code below is to verify that I can manipulate the given date properly to put into the API qrequest\n  // console.log('api date')\n  // console.log((date.date))\n  // console.log(moment(date.date).subtract(2,\"days\").format('YYYY-MM-DD'))\n  let end_date = date.date;\n  let start_date = (moment(date.date).subtract(2,\"days\").format('YYYY-MM-DD'))\n  let DOWDataQuery =  `query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=DOW&outputsize=full&apikey=${alphaVantageAPIKey}`\n  let data = await axios.get(DOWDataQuery)\n  console.log('Successful API Call')\n  console.log(data.data['Time Series (Daily)'][end_date])\n  return data;\n};\n"]},"metadata":{},"sourceType":"module"}