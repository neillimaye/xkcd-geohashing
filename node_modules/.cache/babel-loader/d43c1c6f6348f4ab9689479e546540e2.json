{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Neil/Projects/xkcd-geohashing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Neil/Projects/xkcd-geohashing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport _ from 'lodash';\nexport function getDOW(_x) {\n  return _getDOW.apply(this, arguments);\n}\n\nfunction _getDOW() {\n  _getDOW = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(date) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // to adjust for different dates, the outputsize value needs to be adjusted accordingly.\n            // new code uses the twelvedata API server, which provides all the information I need\n            // plus I have rapidapi taking care of the overhead, which is nice\n            console.log(date.date);\n            console.log(moment().format('YYYY-MM-DD'));\n            console.log(date.date.diff(moment().format('YYYY-MM-DD'))); //\n            // let options = {\n            // method: 'GET',\n            // url: 'https://twelve-data1.p.rapidapi.com/time_series',\n            // params: {symbol: 'DJI', interval: '1day', outputsize: '3', format: 'json'},\n            //   headers: {\n            //     'x-rapidapi-key': 'cc072cf6a1mshca7a9fff5bd7131p175ba7jsne97460d453d2',\n            //     'x-rapidapi-host': 'twelve-data1.p.rapidapi.com'\n            //   }\n            // };\n            //\n            //\n            //\n            //\n            // axios.request(options).then(function (response) {\n            // \tconsole.log(response.data.values);\n            //   return response.data.values\n            // }).catch(function (error) {\n            // \tconsole.error(error);\n            // });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _getDOW.apply(this, arguments);\n}\n\n;","map":{"version":3,"sources":["/Users/Neil/Projects/xkcd-geohashing/src/api/dow.js"],"names":["axios","moment","_","getDOW","date","console","log","format","diff"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,gBAAsBC,MAAtB;AAAA;AAAA;;;;;2BAAO,iBAAsBC,IAAtB;AAAA;AAAA;AAAA;AAAA;AACL;AACA;AACA;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACA,IAAjB;AAEAC,YAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,GAAGM,MAAT,CAAgB,YAAhB,CAAZ;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACA,IAAL,CAAUI,IAAV,CAAeP,MAAM,GAAGM,MAAT,CAAgB,YAAhB,CAAf,CAAZ,EAPK,CAQL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA3BK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA8BN","sourcesContent":["import axios from 'axios';\nimport moment from 'moment';\nimport _ from 'lodash'\n\nexport async function getDOW(date){\n  // to adjust for different dates, the outputsize value needs to be adjusted accordingly.\n  // new code uses the twelvedata API server, which provides all the information I need\n  // plus I have rapidapi taking care of the overhead, which is nice\n  console.log(date.date)\n\n  console.log(moment().format('YYYY-MM-DD'))\n  console.log(date.date.diff(moment().format('YYYY-MM-DD')))\n  //\n  // let options = {\n  // method: 'GET',\n  // url: 'https://twelve-data1.p.rapidapi.com/time_series',\n  // params: {symbol: 'DJI', interval: '1day', outputsize: '3', format: 'json'},\n  //   headers: {\n  //     'x-rapidapi-key': 'cc072cf6a1mshca7a9fff5bd7131p175ba7jsne97460d453d2',\n  //     'x-rapidapi-host': 'twelve-data1.p.rapidapi.com'\n  //   }\n  // };\n  //\n  //\n  //\n  //\n  // axios.request(options).then(function (response) {\n  // \tconsole.log(response.data.values);\n  //   return response.data.values\n  // }).catch(function (error) {\n  // \tconsole.error(error);\n  // });\n\n\n};\n"]},"metadata":{},"sourceType":"module"}