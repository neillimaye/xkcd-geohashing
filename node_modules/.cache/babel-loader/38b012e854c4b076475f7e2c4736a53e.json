{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Neil/Projects/geohashing2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getDOW),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchGetDOWRequest);\n\nimport { takeEvery, takeLatest, take, call, put, fork } from 'redux-saga/effects';\nimport * as actions from '../actions/dow';\nimport * as api from '../api/dow';\n\nfunction getDOW() {\n  var result;\n  return _regeneratorRuntime.wrap(function getDOW$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(api.getUsers);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put(actions.getDOWSuccess({\n            items: result.data.data\n          }));\n\n        case 6:\n          _context.next = 11;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('error');\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[0, 8]]);\n}\n\nfunction watchGetDOWRequest() {\n  return _regeneratorRuntime.wrap(function watchGetDOWRequest$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(actions.Types.GET_DOW_REQUEST, getUsers);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, this);\n}\n\nvar DOWSagas = [fork(watchGetDOWRequest)];\nexport default DOWSagas;","map":{"version":3,"sources":["/Users/Neil/Projects/geohashing2/src/sagas/dow.js"],"names":["getDOW","watchGetDOWRequest","takeEvery","takeLatest","take","call","put","fork","actions","api","getUsers","result","getDOWSuccess","items","data","console","log","Types","GET_DOW_REQUEST","DOWSagas"],"mappings":";;;;yBAIUA,M;;;yBAWAC,kB;;AAfV,SAAQC,SAAR,EAAmBC,UAAnB,EAA+BC,IAA/B,EAAqCC,IAArC,EAA2CC,GAA3C,EAAgDC,IAAhD,QAA2D,oBAA3D;AACA,OAAO,KAAKC,OAAZ,MAAyB,gBAAzB;AACA,OAAO,KAAKC,GAAZ,MAAqB,YAArB;;AAEA,SAAUT,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEiB,iBAAMK,IAAI,CAACI,GAAG,CAACC,QAAL,CAAV;;AAFjB;AAEQC,UAAAA,MAFR;AAAA;AAGE,iBAAML,GAAG,CAACE,OAAO,CAACI,aAAR,CAAsB;AAC/BC,YAAAA,KAAK,EAAEF,MAAM,CAACG,IAAP,CAAYA;AADY,WAAtB,CAAD,CAAT;;AAHF;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOMC,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,SAAUf,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACC,iBAAMC,SAAS,CAACM,OAAO,CAACS,KAAR,CAAcC,eAAf,EAAgCR,QAAhC,CAAf;;AADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,IAAMS,QAAQ,GAAG,CAChBZ,IAAI,CAACN,kBAAD,CADY,CAAjB;AAIA,eAAekB,QAAf","sourcesContent":["import {takeEvery, takeLatest, take, call, put, fork} from 'redux-saga/effects';\nimport * as actions from '../actions/dow';\nimport * as api from '../api/dow';\n\nfunction* getDOW(){\n\ttry{\n\t\tconst result = yield call(api.getUsers);\n\t\tyield put(actions.getDOWSuccess({\n\t\t\titems: result.data.data\n\t\t}));\n\t}catch(e){\n      console.log('error')\n\t}\n}\n\nfunction* watchGetDOWRequest(){\n\tyield takeEvery(actions.Types.GET_DOW_REQUEST, getUsers);\n}\n\nconst DOWSagas = [\n\tfork(watchGetDOWRequest),\n];\n\nexport default DOWSagas;\n"]},"metadata":{},"sourceType":"module"}