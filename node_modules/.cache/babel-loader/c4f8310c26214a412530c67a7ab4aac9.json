{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Neil/Projects/xkcd-geohashing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Neil/Projects/xkcd-geohashing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nexport function getCoords(_x) {\n  return _getCoords.apply(this, arguments);\n}\n\nfunction _getCoords() {\n  _getCoords = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(zip) {\n    var options, result;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // let result = await axios.get(`https://www.zipcodeapi.com/rest/qqZmn6H64bx2BdF9UWZKivRu5vQVZtejqIQOVXCkPiRwwPVht3feiPEqxIMY3S5P/info.json/${zip}/degrees`)\n            options = {\n              method: 'GET',\n              url: 'https://google-maps-geocoding.p.rapidapi.com/geocode/json',\n              params: {\n                address: '10010',\n                language: 'en'\n              },\n              headers: {\n                'x-rapidapi-key': 'cc072cf6a1mshca7a9fff5bd7131p175ba7jsne97460d453d2',\n                'x-rapidapi-host': 'google-maps-geocoding.p.rapidapi.com'\n              }\n            };\n            _context.next = 3;\n            return axios.request(options);\n\n          case 3:\n            result = _context.sent;\n            console.log(result.data.results[0].geometry.location);\n            return _context.abrupt(\"return\", result.data.results[0].geometry.location);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _getCoords.apply(this, arguments);\n}\n\n;","map":{"version":3,"sources":["/Users/Neil/Projects/xkcd-geohashing/src/api/coords.js"],"names":["axios","getCoords","zip","options","method","url","params","address","language","headers","request","result","console","log","data","results","geometry","location"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,gBAAsBC,SAAtB;AAAA;AAAA;;;;;2BAAO,iBAAyBC,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;AAEIC,YAAAA,OAHD,GAGW;AACZC,cAAAA,MAAM,EAAE,KADI;AAEZC,cAAAA,GAAG,EAAE,2DAFO;AAGZC,cAAAA,MAAM,EAAE;AAACC,gBAAAA,OAAO,EAAE,OAAV;AAAmBC,gBAAAA,QAAQ,EAAE;AAA7B,eAHI;AAIZC,cAAAA,OAAO,EAAE;AACP,kCAAkB,oDADX;AAEP,mCAAmB;AAFZ;AAJG,aAHX;AAAA;AAAA,mBAYgBT,KAAK,CAACU,OAAN,CAAcP,OAAd,CAZhB;;AAAA;AAYCQ,YAAAA,MAZD;AAaHC,YAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAP,CAAYC,OAAZ,CAAoB,CAApB,EAAuBC,QAAvB,CAAgCC,QAA5C;AAbG,6CAcIN,MAAM,CAACG,IAAP,CAAYC,OAAZ,CAAoB,CAApB,EAAuBC,QAAvB,CAAgCC,QAdpC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAeN","sourcesContent":["import axios from 'axios'\n\n\nexport async function getCoords(zip){\n    // let result = await axios.get(`https://www.zipcodeapi.com/rest/qqZmn6H64bx2BdF9UWZKivRu5vQVZtejqIQOVXCkPiRwwPVht3feiPEqxIMY3S5P/info.json/${zip}/degrees`)\n\n    let options = {\n      method: 'GET',\n      url: 'https://google-maps-geocoding.p.rapidapi.com/geocode/json',\n      params: {address: '10010', language: 'en'},\n      headers: {\n        'x-rapidapi-key': 'cc072cf6a1mshca7a9fff5bd7131p175ba7jsne97460d453d2',\n        'x-rapidapi-host': 'google-maps-geocoding.p.rapidapi.com'\n      }\n    };\n    let result = await axios.request(options);\n    console.log(result.data.results[0].geometry.location);\n    return result.data.results[0].geometry.location;\n};\n"]},"metadata":{},"sourceType":"module"}