{"ast":null,"code":"import _classCallCheck from \"/Users/Neil/Projects/xkcd-geohashing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Neil/Projects/xkcd-geohashing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Neil/Projects/xkcd-geohashing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Neil/Projects/xkcd-geohashing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Neil/Projects/xkcd-geohashing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Neil/Projects/xkcd-geohashing/src/components/MapContainer.js\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport React, { Component } from 'react';\nimport md5 from 'md5';\nexport var MapContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapContainer, _Component);\n\n  function MapContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MapContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MapContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getGeohash = function () {\n      //the math behind finding the geohashing coordinates\n      var lat = String(parseInt(_this.props.coords.lat));\n      var lng = String(parseInt(_this.props.coords.lng));\n      var stringToHash = String(_this.props.date) + '-' + String(_this.props.data);\n      var hashResult = md5(stringToHash);\n      console.log(hashResult); //working\n\n      var pt1 = hashResult.slice(0, hashResult.length / 2);\n      var pt2 = hashResult.slice(hashResult.length / 2);\n      console.log(pt1);\n      console.log(pt2);\n      var todec1 = parseInt(pt1, 16);\n      var todec2 = parseInt(pt2, 16);\n      var meetupCoordinates = {\n        lat: lat + '.' + todec1,\n        lng: lng + '.' + todec2\n      };\n      _this.props.meetupCoords = meetupCoordinates;\n    };\n\n    return _this;\n  }\n\n  _createClass(MapContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.meetupCoords = this.props.coords;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.getGeohash();\n      this.render();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      return React.createElement(Map, {\n        google: this.props.google,\n        center: this.props.coords,\n        zoom: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        center: this.props.meetupCoords,\n        onClick: this.onMarkerClick,\n        name: 'Current location',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(InfoWindow, {\n        onClose: this.onInfoWindowClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Test\"))));\n    }\n  }]);\n\n  return MapContainer;\n}(Component);\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyAquoUs4NfM4dxHs2V2Ja8jxmeYy1Dw9so'\n})(MapContainer);","map":{"version":3,"sources":["/Users/Neil/Projects/xkcd-geohashing/src/components/MapContainer.js"],"names":["Map","InfoWindow","Marker","GoogleApiWrapper","React","Component","md5","MapContainer","getGeohash","lat","String","parseInt","props","coords","lng","stringToHash","date","data","hashResult","console","log","pt1","slice","length","pt2","todec1","todec2","meetupCoordinates","meetupCoords","render","google","onMarkerClick","onInfoWindowClose","apiKey"],"mappings":"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","sourcesContent":["import {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport React, { Component} from 'react';\nimport md5 from 'md5'\n\n\nexport class MapContainer extends Component {\n\n\n  componentDidMount(){\n    this.props.meetupCoords = this.props.coords;\n  }\n  getGeohash = () =>{\n    //the math behind finding the geohashing coordinates\n    let lat = String(parseInt(this.props.coords.lat));\n    let lng = String(parseInt(this.props.coords.lng));\n    let stringToHash = String(this.props.date) + '-' + String(this.props.data) ;\n    let hashResult = md5(stringToHash)\n    console.log(hashResult)  //working\n    let pt1 = hashResult.slice(0,hashResult.length/2)\n    let pt2 = hashResult.slice(hashResult.length/2)\n    console.log(pt1)\n    console.log(pt2)\n    let todec1 = parseInt(pt1,16)\n    let todec2 = parseInt(pt2,16)\n    const meetupCoordinates = {\n      lat: lat+'.'+todec1,\n      lng: lng+'.'+todec2\n    }\n    this.props.meetupCoords = meetupCoordinates;\n\n  }\n  componentDidUpdate(){\n    this.getGeohash()\n    this.render()\n  }\nrender() {\n  console.log(this.props)\n  return (\n    <Map google={this.props.google} center={this.props.coords} zoom={20}>\n      <Marker center = {this.props.meetupCoords} onClick={this.onMarkerClick}\n            name={'Current location'} />\n      <InfoWindow onClose={this.onInfoWindowClose}>\n       <div>\n        <h1>Test</h1>\n       </div>\n      </InfoWindow>\n  </Map>\n );\n }\n}\n\n\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyAquoUs4NfM4dxHs2V2Ja8jxmeYy1Dw9so'\n})(MapContainer)\n"]},"metadata":{},"sourceType":"module"}