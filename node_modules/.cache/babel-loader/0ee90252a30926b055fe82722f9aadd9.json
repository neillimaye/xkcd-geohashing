{"ast":null,"code":"import { takeLatest, call, put, fork } from 'redux-saga/effects';\nimport * as actions from '../actions/dow';\nimport * as api from '../api/dow';\nimport { Types } from '../actions/dow'; // \n// function* getDOW(action){\n// \ttry{\n// \t\tconst result = yield call(api.getDOW, action.date);\n// \t\tyield put({\n// \t\t\ttype: Types.GET_DOW_SUCCESS,\n// \t\t\tpayload: result\n// \t\t})\n// \t\tconsole.log('successful saga execution')\n// \t}catch(e){\n//       console.log('error')\n// \t}\n// }\n//\n// function* watchGetDOWRequest(){\n// \t// console.log('watching getdow saga call')\n// \t//take the latest request action called and then call the getDow function\n// \t//taking the latest because we want to adjust for when people update the date they put in\n// \tyield takeLatest(actions.Types.GET_DOW_REQUEST, getDOW);\n// }\n//\n// const DOWSagas = [\n// \tfork(watchGetDOWRequest),\n// ];\n\nexport default DOWSagas;","map":{"version":3,"sources":["/Users/Neil/Projects/xkcd-geohashing/src/sagas/dow.js"],"names":["takeLatest","call","put","fork","actions","api","Types","DOWSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA0C,oBAA1C;AACA,OAAO,KAAKC,OAAZ,MAAyB,gBAAzB;AACA,OAAO,KAAKC,GAAZ,MAAqB,YAArB;AACA,SAAQC,KAAR,QAAoB,gBAApB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeC,QAAf","sourcesContent":["import {takeLatest, call, put, fork} from 'redux-saga/effects';\nimport * as actions from '../actions/dow';\nimport * as api from '../api/dow';\nimport {Types} from '../actions/dow';\n\n// \n// function* getDOW(action){\n// \ttry{\n// \t\tconst result = yield call(api.getDOW, action.date);\n// \t\tyield put({\n// \t\t\ttype: Types.GET_DOW_SUCCESS,\n// \t\t\tpayload: result\n// \t\t})\n// \t\tconsole.log('successful saga execution')\n// \t}catch(e){\n//       console.log('error')\n// \t}\n// }\n//\n// function* watchGetDOWRequest(){\n// \t// console.log('watching getdow saga call')\n// \t//take the latest request action called and then call the getDow function\n// \t//taking the latest because we want to adjust for when people update the date they put in\n// \tyield takeLatest(actions.Types.GET_DOW_REQUEST, getDOW);\n// }\n//\n// const DOWSagas = [\n// \tfork(watchGetDOWRequest),\n// ];\n\nexport default DOWSagas;\n"]},"metadata":{},"sourceType":"module"}