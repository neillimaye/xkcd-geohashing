{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Neil/Projects/xkcd-geohashing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Neil/Projects/xkcd-geohashing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport _ from 'lodash';\nexport function getDOW(_x) {\n  return _getDOW.apply(this, arguments);\n}\n\nfunction _getDOW() {\n  _getDOW = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(date) {\n    var endDate, oneWeekBefore;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // to adjust for different dates, the outputsize value needs to be adjusted accordingly.\n            // new code uses the twelvedata API server, which provides all the information I need\n            // plus I have rapidapi taking care of the overhead, which is nice\n            endDate = moment(date);\n            oneWeekBefore = moment(endDate).subtract(7, \"days\"); // let today = moment().format('YYYY-MM-DD')\n            // let daysBetween = -1 * startDate.diff(today,\"days\") +1\n            // console.log(daysBetween)\n            // let options = {\n            // method: 'GET',\n            // url: 'https://twelve-data1.p.rapidapi.com/time_series',\n            // params: {symbol: 'DJI', interval: '1day', outputsize: daysBetween, format: 'json'},\n            //   headers: {\n            //     'x-rapidapi-key': 'cc072cf6a1mshca7a9fff5bd7131p175ba7jsne97460d453d2',\n            //     'x-rapidapi-host': 'twelve-data1.p.rapidapi.com'\n            //   }\n            // };\n            //\n            // console.log('checking the past ' + options.params.outputsize + ' days')\n            //\n            // let result = await axios.request(options)\n            // let DJIAdata = result.data.values;\n            // let searchDate = startDate;\n            // console.log(startDate.date + ' is day ' + startDate.day())\n            // if (startDate.day() === 6){ //if it's a saturday\n            //   searchDate = startDate.subtract(1, \"days\");\n            // }else if (startDate.day() === 0) { //if it's a sunday\n            //   searchDate =startDate.subtract(2, \"days\");\n            // }\n            // console.log(searchDate)\n            //\n            // let dowOpening = _.find(DJIAdata, {'datetime':moment(searchDate).format('YYYY-MM-DD')})\n\n            return _context.abrupt(\"return\", 1);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _getDOW.apply(this, arguments);\n}\n\n;","map":{"version":3,"sources":["/Users/Neil/Projects/xkcd-geohashing/src/api/dow.js"],"names":["axios","moment","_","getDOW","date","endDate","oneWeekBefore","subtract"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,gBAAsBC,MAAtB;AAAA;AAAA;;;;;2BAAO,iBAAsBC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AACL;AACA;AACA;AACIC,YAAAA,OAJC,GAISJ,MAAM,CAACG,IAAD,CAJf;AAKDE,YAAAA,aALC,GAKeL,MAAM,CAACI,OAAD,CAAN,CAAgBE,QAAhB,CAAyB,CAAzB,EAA4B,MAA5B,CALf,EAML;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAhCK,6CAiCE,CAjCF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAkCN","sourcesContent":["import axios from 'axios';\nimport moment from 'moment';\nimport _ from 'lodash'\n\nexport async function getDOW(date){\n  // to adjust for different dates, the outputsize value needs to be adjusted accordingly.\n  // new code uses the twelvedata API server, which provides all the information I need\n  // plus I have rapidapi taking care of the overhead, which is nice\n  let endDate = moment(date);\n  let oneWeekBefore = moment(endDate).subtract(7, \"days\");\n  // let today = moment().format('YYYY-MM-DD')\n  // let daysBetween = -1 * startDate.diff(today,\"days\") +1\n  // console.log(daysBetween)\n  // let options = {\n  // method: 'GET',\n  // url: 'https://twelve-data1.p.rapidapi.com/time_series',\n  // params: {symbol: 'DJI', interval: '1day', outputsize: daysBetween, format: 'json'},\n  //   headers: {\n  //     'x-rapidapi-key': 'cc072cf6a1mshca7a9fff5bd7131p175ba7jsne97460d453d2',\n  //     'x-rapidapi-host': 'twelve-data1.p.rapidapi.com'\n  //   }\n  // };\n  //\n  // console.log('checking the past ' + options.params.outputsize + ' days')\n  //\n  // let result = await axios.request(options)\n  // let DJIAdata = result.data.values;\n  // let searchDate = startDate;\n  // console.log(startDate.date + ' is day ' + startDate.day())\n  // if (startDate.day() === 6){ //if it's a saturday\n  //   searchDate = startDate.subtract(1, \"days\");\n  // }else if (startDate.day() === 0) { //if it's a sunday\n  //   searchDate =startDate.subtract(2, \"days\");\n  // }\n  // console.log(searchDate)\n  //\n  // let dowOpening = _.find(DJIAdata, {'datetime':moment(searchDate).format('YYYY-MM-DD')})\n  return 1\n};\n"]},"metadata":{},"sourceType":"module"}